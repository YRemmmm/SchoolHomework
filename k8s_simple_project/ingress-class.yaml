apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: adm
subjects:
  - kind: ServiceAccount
    name: adm
    namespace: default
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: adm
  namespace: default
  labels:
    app: adm
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nginx-ingress-lb
  namespace: default
  labels:
    name: nginx-ingress-lb
spec:
  selector:
    matchLabels:
      app: nginx-ingress-lb
  template:
    metadata:
      name: nginx-ingress-lb
      labels:
        app: nginx-ingress-lb
    spec:
      terminationGracePeriodSeconds: 60
      serviceAccountName: adm
      containers:
      - image: registry.cn-hangzhou.aliyuncs.com/google_containers/nginx-ingress-controller:v1.1.0
        name: nginx-ingress-lb
        ports:
        - containerPort: 80
          hostPort: 80
        - containerPort: 443
          hostPort: 443
        readinessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
        livenessProbe:
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 10
          timeoutSeconds: 1
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        args:
        - /nginx-ingress-controller
        - '--ingress-class=cluster-ingress-class'
---
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: cluster-ingress-class
  namespace: default
spec:
  controller: k8s.io/ingress-nginx
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: cluster-ingress
  namespace: default
spec:
  ingressClassName: cluster-ingress-class
  rules:
  - host: test.sample.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: consul-gateway
            port:
              number: 8080